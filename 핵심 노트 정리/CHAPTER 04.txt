[CHAPTER 04 실무에 필요한 SQL]

4-1. 연산자

(1) 연산자는 WHERE절에 주로 사용되며, 종류는 비교/논리/특수/산술
(2) 비교 연산자 : =, >, <, >=, <=, <>
(3) 논리 연산자 : AND, OR, NOT
(4) 특수 연산자 : (NOT) BETWEEN a AND b, (NOT) IN, (NOT) LIKE, IS (NOT) NULL
** 비교문자열 형태 예시 : LIKE '%포함하고 싶은 문자열%'
(5) 산술 연산자 : +, -, *, /

4-2. 단일 행 함수

(1) 단일 행 함수는 숫자/문자/날짜/형 변환/일반으로 총 5가지 종류
(2) 숫자 : ABS, ROUND, CEILING(크거나 같은 최소 정수), FLOOR(작거나 같은 최소 정수),
             POWER(거듭 제곱), SQRT
(3) 문자 : LOWER, UPPER, LEFT, RIGHT, LEN, REPLACE, CONCAT, LTRIM(왼쪽 공백 제외 문자 반환),
             RTRIM, TRIM, SUBSTRING, CHARINDEX, SPACE(n만큼 공백 추가), STUFF
** LEN의 경우 오른 쪽에 위치한 공백은 제외하고 글자 수 반환
** REPLACE('문자열', a, b) : 문자열 중 a가 있으면 b로 반환
** SUBSTRING('문자열', a, b) : 문자열의 a 위치에서 b개 길이만큼 반환
** CHARINDEX(a, '문자열', n) : 문자열 중 a가 있으면 위치 반환(없으면 0, n으로 시작 위치 지정)
** STUFF('문자열', m, n, a) : 문자열의 m 위치에서 n개 길이만큼 삭제 후 a로 반환
(4) 날짜 : GETDATE, YEAR, MONTH, DAY, DATEPART(기준, '날짜열'), DATEADD(기준, n, '날짜열'),
             DATEDIFF(기준, '날짜열a', '날짜열b')
(5) 형 변환 : CONVERT, CAST
** CONVERT(VARCHAR, '날짜열', 기준) : 지정 기준으로 날짜를 문자열 형식으로 변환 (기준 : 21, 23, 111, 112, 120)
** CAST(특정 열 AS 기준) : 지정 기준으로 특정 열 형식 변환
(6) 일반 : ISNULL, NULLIF, CASE ~ WHEN THEN ~ END
** ISNULL(특정 열, 지정 값) : 특정 열이 NULL일 경우 지정 값 변환
** NULLIF(특정 열a, 특정 열b) : 특정 열 a,b가 같은 경우 NULL, 다를 경우 특정 열a 변환

4-3. 복수 행 함수

(1) 복수 행 함수는 복수 행을 그룹화하여 함수가 적용되며, 집계/그룹으로 2가지 종류
(2) 집계 : COUNT, SUM, AVG, MAX, MIN, STDEV, VAR
** 집계함수는 NULL 값 제외, COUNT(*)은 NULL 값을 포함한 건수
** 집계함수는 테이블 전체 또는 여러 행에 대한 하나의 결괏값 반환
(3) 그룹 : WITH ROLLUP, WITH CUBE, GROPING SET, GROUPING
** WITH ROLLUP : GROUP BY 항목들을 오른쪽에서 왼쪽 순으로 그룹
   (총계 및 소계(NULL로 표현)를 구할 때 사용)
** WITH CUBE : GROUP BY 항목들의 모든 경우의 수를 그룹
   (WITH ROLLUP보다 상세한 집계 값 조회)
** GROUPING SET : GROUP BY 항목들을 개별 그룹
** GROUPING : WITH ROLLUP 및 CUBE에 의해 그룹화되었다면 0, 아니면 1
** GROUPING 및 CASE WHEN을 활용하면 NULL이 아닌 '총계 및 소계'로 표기 가능
   (다만, 열의 형식이 숫자일 경우 문자로 형 변환 필요)

4-4. 윈도우 함수

(1) 윈도우 함수는 행과 행 간의 관계를 정의하며, 순위/집계(누적) 2가지 종류
** 기본 문법은 윈도우 함수 + OVER (PARTITION BY 열 ORDER BY 열)
(2) 순위 : ROW_NUMBER(1,2,3..), RANK(1,1,3..), DENSE_RANK(1,1,2..)
** ROW_NUMBER() : 동일한 값에 대해 고유한 순위 반환
** DENSE_RANK() : RANK()와 흡사하나, 동일한 순위를 하나의 등수로 간주
(3) 집계(누적) : COUNT, SUM, AVG, MAX, MIN

4-5. 집합 연산자

(1) 집합 연산자는 두 개 이상의 SELECT절의 결과를 하나로 결합하며, 총 4가지 종류
(2) UNION : 합집합. 중복된 행을 하나의 행으로 반환
(3) UNION ALL : 합집합. 중복된 행을 그대로 반환
(4) INTERSECT : 교집합. 중복된 행은 하나의 행으로 반환
(5) EXCEPT : 차집합. 중복된 행은 하나의 행으로 반환